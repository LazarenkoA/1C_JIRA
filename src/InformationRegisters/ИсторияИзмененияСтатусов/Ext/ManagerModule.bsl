#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	Процедура ОбновитьЗаписи(Номера = Неопределено) Экспорт 	
		СписокЗадач = Новый Массив();
		Если Номера = Неопределено Тогда
			СписокЗадач = ВзаимодействиеC_JIRA_КлиентСервер.ПолучитьЗадачиОбновленныеСегодня(Истина);
		Иначе
			Для Каждого Блок Из ОбщегоНазначенияКлиентСервер.РазбитьМассив(Номера, 10) Цикл
				СписокЗадачВрем = ВзаимодействиеC_JIRA_КлиентСервер.ПолучитьСписокЗадач(СтрШаблон("key in(%1)", СтрСоединить(Блок, ",")), Истина);
				СписокЗадач = ОбщегоНазначенияКлиентСервер.СлитьМассивы(СписокЗадач, СписокЗадачВрем);
			КонецЦикла;	
		КонецЕсли;
		
		Для Каждого Задача Из СписокЗадач Цикл
			Лог = Задача["changelog"];
			Если Лог = Неопределено Тогда
				Продолжить;	
			КонецЕсли;
			
			Набор = РегистрыСведений.ИсторияИзмененияСтатусов.СоздатьНаборЗаписей();
			ЗадачаСсылка = Справочники.Задачи.НайтиПоКоду(Задача["key"]);
			Набор.Отбор.Задача.Установить(ЗадачаСсылка);
			
			Для Каждого ЗаписьЛога Из Лог["histories"] Цикл
				Для Каждого Изменение Из ЗаписьЛога["items"] Цикл
					Если НРег(Изменение["field"]) <> "status" Тогда
						Продолжить;	
					КонецЕсли;
					
					Запись = Набор.Добавить();
					Запись.НомерЗаписи = Набор.Количество();
					Запись.Задача = ЗадачаСсылка;
					Запись.Автор = Справочники.Пользователи.НайтиСоздатьПользователя(ЗаписьЛога["author"]);
					Запись.ДатаСобытия = ВзаимодействиеC_JIRA_КлиентСервер.ПреобразоватьВДату(ЗаписьЛога["created"]);
					Запись.ИсходныйСтатус = Изменение["fromString"];
					Запись.КонечныйСтатус = Изменение["toString"];
				КонецЦикла;
			КонецЦикла;
			
			ДатаСоздания = ВзаимодействиеC_JIRA_КлиентСервер.ПреобразоватьВДату(Задача["fields"]["created"]);
			
			ТЗ = Набор.Выгрузить();
			ТЗ.Сортировать("ДатаСобытия");
			Для а = 0 По ТЗ.Количество()-1 Цикл
				Если а = 0 Тогда // Первая запись
					ТЗ[а].МинутПробылВИсходномСтатусе = (ТЗ[а].ДатаСобытия - ДатаСоздания) / 60;
				Иначе 
					ТЗ[а].МинутПробылВИсходномСтатусе = (ТЗ[а].ДатаСобытия - ТЗ[а-1].ДатаСобытия) / 60;	
				КонецЕсли;
			КонецЦикла;
			
			Набор.Загрузить(ТЗ);
			Набор.Записать(Истина);
		КонецЦикла;
	КонецПроцедуры
	
#КонецЕсли