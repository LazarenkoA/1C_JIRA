
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыПисьма() Экспорт
	
	ПараметрыПисьма = Новый Структура;
	
	ПараметрыПисьма.Вставить("Тема", "");
	ПараметрыПисьма.Вставить("Тело", "");
	ПараметрыПисьма.Вставить("АдресПолучателя", "");
	ПараметрыПисьма.Вставить("ИмяПолучателя");
	ПараметрыПисьма.Вставить("АдресОтправителя");
	ПараметрыПисьма.Вставить("ИмяОтправителя");
	ПараметрыПисьма.Вставить("ПарольОтправителя");
	ПараметрыПисьма.Вставить("СерверИсходящейПочтыSMTP");
	ПараметрыПисьма.Вставить("ПользовательИсходящейПочты");
	ПараметрыПисьма.Вставить("ПортSMTP");
	
	Возврат ПараметрыПисьма;
	
КонецФункции

// Возвращает структуру с параметрами письма
//
Функция ПодготовитьПараметрыПисьма(ПараметрыПисьма) Экспорт
	
	Если ПараметрыПисьма.ИмяПолучателя = Неопределено Тогда
		ПараметрыПисьма.ИмяПолучателя = ПараметрыПисьма.АдресПолучателя;
	КонецЕсли;
	
	Если ПараметрыПисьма.АдресОтправителя = Неопределено Тогда
		ПараметрыПисьма.АдресОтправителя = Константы.АдресЭлектроннойПочты.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.ИмяОтправителя = Неопределено Тогда
		ПараметрыПисьма.ИмяОтправителя = Константы.ИмяОтправителя.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.ПарольОтправителя = Неопределено Тогда
		ПараметрыПисьма.ПарольОтправителя = Константы.ПарольЭлектроннойПочты.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.СерверИсходящейПочтыSMTP = Неопределено Тогда
		ПараметрыПисьма.СерверИсходящейПочтыSMTP = Константы.СерверИсходящейПочтыSMTP.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.ПользовательИсходящейПочты = Неопределено Тогда
		ПараметрыПисьма.ПользовательИсходящейПочты = Константы.ПользовательИсходящейПочты.Получить();
	КонецЕсли;
	
	Если ПараметрыПисьма.ПортSMTP = Неопределено Тогда
		ПараметрыПисьма.ПортSMTP = Константы.ПортSMTP.Получить();
	КонецЕсли;
	
	Возврат ПараметрыПисьма;
	
КонецФункции

// Отправляет письмо по параметрам письма
//
Функция ОтправитьСообщение(ПараметрыПисьма, ОписаниеОшибки = "", ТекстHTML = Неопределено, РазделительАдресов = ";") Экспорт
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема = ПараметрыПисьма.Тема;
	
	ИмяПолучателя = ПараметрыПисьма.ИмяПолучателя;
	
	// Заполняем адреса получателей письма.
	МассивАдресов = СтрРазделить(ПараметрыПисьма.АдресПолучателя, РазделительАдресов, Ложь);
	Для Каждого АдресПолучателя Из МассивАдресов Цикл
		АдресПолучателя = СокрЛП(АдресПолучателя);
		Получатель = Письмо.Получатели.Добавить(АдресПолучателя);
		Получатель.ОтображаемоеИмя = ?(ЗначениеЗаполнено(ИмяПолучателя), ИмяПолучателя, АдресПолучателя);
	КонецЦикла;
	
	// Добавляем к письму имя отправителя.
	Письмо.ИмяОтправителя              = ПараметрыПисьма.ИмяОтправителя;
	Письмо.Отправитель.ОтображаемоеИмя = ПараметрыПисьма.ИмяОтправителя;
	Письмо.Отправитель.Адрес           = ПараметрыПисьма.АдресОтправителя;
	
	// Если текст HTML не определен, тогда добавляем обычный текст.
	Если ТекстHTML = Неопределено Тогда
		Текст = Письмо.Тексты.Добавить(ПараметрыПисьма.Тело, ТипТекстаПочтовогоСообщения.ПростойТекст);
	Иначе
		// Иначе добавим текст из тела письма в HTML.
		НовыйТекстHTML = РазборФайловHTML.ДобавитьОбычныйТекстВТекстHTML(ТекстHTML, ПараметрыПисьма.Тело);
		Текст = Письмо.Тексты.Добавить(НовыйТекстHTML, ТипТекстаПочтовогоСообщения.HTML);
		Письмо.ОбработатьТексты();
	КонецЕсли;
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.Пользователь       = ПараметрыПисьма.ПользовательИсходящейПочты;
	Профиль.Пароль             = ПараметрыПисьма.ПарольОтправителя;
	Профиль.ВремяОжидания      = 30;
	Профиль.АдресСервераSMTP   = ПараметрыПисьма.СерверИсходящейПочтыSMTP;
	Профиль.ПортSMTP           = ПараметрыПисьма.ПортSMTP;
	Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
	Профиль.ПользовательSMTP   = ПараметрыПисьма.ПользовательИсходящейПочты;
	Профиль.ПарольSMTP         = Профиль.Пароль;
	
	Попытка
		Соединение = Новый ИнтернетПочта;
		Соединение.Подключиться(Профиль);
		Соединение.Послать(Письмо);
		Соединение.Отключиться();
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

Функция СформироватьДанныеДляОтправки(НомераЗадач) Экспорт 
	Ответ = Новый Массив();
	
	СгруппированныеДанные = ОбщегоНазначенияСервер.ПолучитьЗадачиПоСГруппировкой(НомераЗадач, "Автор");
	Пока СгруппированныеДанные.Следующий() Цикл
		ПараметрыПисьма = РаботаСПочтовымиСообщениями.ПолучитьПараметрыПисьма();
		ПараметрыПисьма.Вставить("ТелоHTML");
		ПараметрыПисьма.Тема = "У задачи изменился срок решения";
		ПараметрыПисьма.АдресПолучателя = СгруппированныеДанные.Автор.Email;
		ПараметрыПисьма.ИмяПолучателя = СгруппированныеДанные.Автор.ФИО;
		ПараметрыПисьма.ТелоHTML = СтрШаблон("<p>Уважаемый %1, ниже приведен список задач, дата завершения которых была изменена.</p>",  ПараметрыПисьма.ИмяПолучателя);	
		ПараметрыПисьма.ТелоHTML = ПараметрыПисьма.ТелоHTML + "
		|<table  border=1>
		|<tbody>
		|<tr>
		|<td><strong>Номер задачи</strong></td>
		|<td><strong>Заголовок</strong></td>
		|<td><strong>Исполнитель</strong></td>
		|<td><strong>Плановая дата завершения</strong></td>
		|</tr>";
		
		ВыборкаДетальныеЗаписи = СгруппированныеДанные.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ПараметрыПисьма.ТелоHTML = ПараметрыПисьма.ТелоHTML + "
			|<tr>
			|<td>" + ВыборкаДетальныеЗаписи.Номер+ "</td>
			|<td>" + ВыборкаДетальныеЗаписи.Заголовок + "</td>
			|<td>" + Строка(ВыборкаДетальныеЗаписи.Исполнитель) + "</td>
			|<td>" + Строка(ВыборкаДетальныеЗаписи.ПлановаяДатаЗавершения) + "</td>
			|</tr>";
		КонецЦикла;
		
		ПараметрыПисьма.ТелоHTML = ПараметрыПисьма.ТелоHTML + "
		|</tbody>
		|</table>";
		
		Ответ.Добавить(ПараметрыПисьма);
	КонецЦикла;
	
	Возврат Ответ;
КонецФункции
