Функция РазбитьМассив(ИсходныйМассив, РазмерБлока) Экспорт 
	Ответ = Новый Массив();
	
	Для а = 0 По ИсходныйМассив.Количество()-1 Цикл
		Если а % РазмерБлока = 0 Тогда
			Ответ.Добавить(Новый Массив());
		КонецЕсли;
		
		Ответ[Ответ.ВГраница()].Добавить(ИсходныйМассив[а]);
	КонецЦикла;
	
	Возврат Ответ;
КонецФункции

Функция СтруктураURI(Знач СтрокаURI) Экспорт
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = СтрНайти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;

	// Строка соединения и путь на сервере.
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = СтрНайти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
		
	// Информация пользователя и имя сервера.
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = СтрНайти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = СтрНайти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = СтрНайти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
		Если Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Порт) Тогда
			Порт = "";
		КонецЕсли;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(ПустаяСтрока(Порт), Неопределено, Число(Порт)));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции

Функция НаличиеСвойстваУОбъекта(Объект, ИмяСвойства) Экспорт
	ИдентификаторОтсутствия = Новый УникальныйИдентификатор;
	СтруктураПроверки = Новый Структура;
	СтруктураПроверки.Вставить(ИмяСвойства, ИдентификаторОтсутствия);
	ЗаполнитьЗначенияСвойств(СтруктураПроверки, Объект);
	
	Возврат СтруктураПроверки[ИмяСвойства] <> ИдентификаторОтсутствия
КонецФункции

// Функция - Слить массивы.
// Объединяет 2 массива, исходные массивы не изменяются. Элементы добавляются в первый массив из второго.
//
// Параметры:
//  Массив1 - Массив - первый массив;
//  Массив2 - Массив - второй массив.
//
// Возвращаемое значение:
//  Массив - объединенный массив.
//
Функция СлитьМассивы(Массив1, Массив2) Экспорт 
  Результат = Новый Массив();
  Для Каждого Элемент Из Массив1 Цикл
    Результат.Добавить(Элемент);  
  КонецЦикла;
  Для Каждого Элемент Из Массив2 Цикл
    Результат.Добавить(Элемент);  
  КонецЦикла;
  
  Возврат Результат;
КонецФункции

Функция СвернутьМассив(Знач ИсходныйМассив, ПоЭлементам = Неопределено) Экспорт 
  СоответствиеЗначений = Новый Соответствие();
  Результат = Новый Массив();
  Для Каждого Элемент Из ИсходныйМассив Цикл
    Ключ = "";
    Если ЗначениеЗаполнено(ПоЭлементам) Тогда
      Буфер = "";
      Для Каждого Колонка Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПоЭлементам,, Истина, Истина) Цикл
        Буфер = Буфер + Строка(Элемент[Колонка]);
      КонецЦикла;
      Ключ = ОбщегоНазначенияСервер.GuidИзСтроки(Буфер);
    Иначе
      // Не очевидно с первого взгляда, но если элемент будет структурой, то все свернется в одну строку!. 
      // Раньше использовалась таблица значений для свертки, она не свертывала "сложные" данные.
      // Ключ = GuidИзСтроки(Строка(Элемент));
      Ключ = ?(Элемент = Неопределено, Строка(Элемент), Элемент); // если оставить без условия на Неопределено, получится что массив из элементов Неопределено никогда не свернется
    КонецЕсли;
    
    Если СоответствиеЗначений[Ключ] = Неопределено Тогда
      Результат.Добавить(Элемент);  
      СоответствиеЗначений.Вставить(Ключ, Истина);
    КонецЕсли;
  КонецЦикла;
  
  Возврат Результат;
КонецФункции

Функция ПустоеЗначениеТипа(ЗаданныйТип) Экспорт
	
	Если ЗаданныйТип = Тип("Число") Тогда
		Возврат 0;
	ИначеЕсли ЗаданныйТип = Тип("Строка") Тогда
		Возврат "";
	ИначеЕсли ЗаданныйТип = Тип("Дата") Тогда
		Возврат '00010101000000';
	ИначеЕсли ЗаданныйТип = Тип("Булево") Тогда
		Возврат Ложь;
	ИначеЕсли ЗаданныйТип = Тип("УникальныйИдентификатор") Тогда
		Возврат Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	Иначе
		Возврат Новый(ЗаданныйТип);
	КонецЕсли;
	
КонецФункции

Функция ЗначениеВМассиве(Значение) Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Значение);
	
	Возврат Массив;
	
КонецФункции

