/////////////// Защита модуля ///////////////
// @protect                                //
/////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура загрузки изменений
//
// Параметры:
//  Форма  - УправляемаяФорма - форма;
//  НастройкаПодключенияКРепозиторию  - Произвольный - настройки.
//
Процедура ЗагрузитьИзменения(Форма, Знач НастройкаПодключенияКРепозиторию = Неопределено) Экспорт 
	Перем КодВозврата;
	
	#Если Не ВебКлиент Тогда
		Если (Не ОбщегоНазначенияКлиентСервер.НаличиеСвойстваУОбъекта(Форма, "НастройкаПодключенияКРепозиторию") 
			Или (Не ЗначениеЗаполнено(Форма.НастройкаПодключенияКРепозиторию))) И НастройкаПодключенияКРепозиторию = Неопределено Тогда
			Сообщить("Заполните настройки");
			Возврат;  
		КонецЕсли;
		
		НастройкаПодключенияКРепозиторию = ?(НастройкаПодключенияКРепозиторию = Неопределено, Форма.НастройкаПодключенияКРепозиторию, НастройкаПодключенияКРепозиторию);
		Текст = БФТ_ОбщиеМетодыАРМаСборокНаКлиентеНаСервере.ВыполнитьМетод(НастройкаПодключенияКРепозиторию, "log");
		ВремФайл = ПолучитьИмяВременногоФайла("xml");
		Попытка
			ЗаписьТекста = Новый ЗаписьТекста(ВремФайл, КодировкаТекста.ANSI);
			ЗаписьТекста.ЗаписатьСтроку(Текст);
			ЗаписьТекста.Закрыть();
			
			Файл = Новый Файл(ВремФайл);
			ДопДанные = Новый Структура("ИдентификаторФормы, ВремФайл", Форма.УникальныйИдентификатор, ВремФайл);
			ОО = Новый ОписаниеОповещения("НачатьПроверкуСуществованияЗавершение", БФТ_ОбщиеМетодыАРМаСборокНаКлиенте, ДопДанные);
			Файл.НачатьПроверкуСуществования(ОО);
		Исключение
			ОбщегоНазначенияКлиентСервер.УдалитьФайлыКлиентСервер(ВремФайл);
			ВызватьИсключение;
		КонецПопытки;  
	#Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данное действие не доступно для веб клиента");
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура НачатьПроверкуСуществованияЗавершение(Существует, ДопДанные) Экспорт 
	Если Существует Тогда
		АдресФайла = Неопределено;
		ОО = Новый ОписаниеОповещения("НачатьПомещениеФайлаЗавершение", БФТ_ОбщиеМетодыАРМаСборокНаКлиенте);
		НачатьПомещениеФайла(ОО, АдресФайла, ДопДанные.ВремФайл, Ложь, ДопДанные.ИдентификаторФормы);
	КонецЕсли;
КонецПроцедуры


// Процедура завершения события начать помещение файла.
//
// Параметры:
//  Результат  - Произвольный - что-то;
//  Адрес  - Произвольный - что-то;
//  ВыбранноеИмяФайла  - Произвольный - Не используется;
//  ДополнительныеПараметры  - Произвольный - Не используется.
//
&НаКлиенте
Процедура НачатьПомещениеФайлаЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт 
  Если Результат Тогда
    БФТ_ОбщиеМетодыАРМаСборокНаСервере.РазобратьФайл(Адрес, Неопределено);
		ОбщегоНазначенияКлиентСервер.УдалитьФайлыКлиентСервер(ВыбранноеИмяФайла);
  КонецЕсли;
КонецПроцедуры


#КонецОбласти         

