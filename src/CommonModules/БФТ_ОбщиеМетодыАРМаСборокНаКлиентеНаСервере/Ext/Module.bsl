/////////////// Защита модуля ///////////////
// @protect                                //
/////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция выполнения метода
//
// Параметры:
//  НастройкаСсылка  - ЛюбаяСсылка - ссылка настройки;
//  ИмяКоманды  - Строка - имя команды;
//  ВнешниеПараметры  - Неопределено - внешние параметры.
//
// Возвращаемое значение:
//   Произвольный   - что-то.
//
Функция ВыполнитьМетод(НастройкаСсылка, ИмяКоманды, Знач ВнешниеПараметры = Неопределено) Экспорт 
	Перем Файл, Метод, Команда, ВремФайл, ЧтениеТекста;
	
	Метод = БФТ_ОбщиеМетодыАРМаСборокНаСервере.ПолучитьМетод(НастройкаСсылка, ИмяКоманды);
	Если Не ЗначениеЗаполнено(Метод) Тогда
		ВызватьИсключение СтрШаблон("Метод ""%1"" не найден", ИмяКоманды);  
	КонецЕсли;
	
	Команда = БФТ_ОбщиеМетодыАРМаСборокНаСервере.СформироватьКомандуВыполнения(Метод, ВнешниеПараметры);
	
	// Описание проблемы тут
	// https://partners.v8.1c.ru/forum/message/1708027
	
	// Плюнул и отключил в конфигурации "Режим использования синхронных вызовов расширений платформы и внешних компонент"
	КодВозврата = 0;
	ФайлОтвет = ПолучитьИмяВременногоФайла();
	ФайлОшибка = ПолучитьИмяВременногоФайла();

	ЗапуститьПриложение(СтрШаблон("cmd /C ""%1"" > %2 2> %3", Команда, ФайлОтвет, ФайлОшибка),, Истина, КодВозврата);
	Если КодВозврата = 0 Тогда
		Возврат ЧтениеФайла(ФайлОтвет); 
	Иначе
		ВызватьИсключение СтрШаблон("При вызове метода ""%1"" произошла ошибка:
		|""%2""
		|
		|Выполняемая команда:
		|%3", ИмяКоманды, ЧтениеФайла(ФайлОшибка), Команда);
	КонецЕсли;
	
	// Используется Wscript.Shell т.к. КомандаСистемы недоступен на сервере.
	// А ЗапуститьПриложение не умеет получать результат (вывод результата выполнения комменды в файл ">").
	//Попытка
	//	//ВФ = ПолучитьИмяВременногоФайла();
	//	КодВозврата = 0;
	//	
	//	WshShell = Новый COMОбъект("Wscript.Shell");
	//  // ЗапуститьПриложение(СтрШаблон("cmd /C ""%1"" > %2", Команда, ВФ),, Истина, КодВозврата);
	//	// Result = WshShell.Run(СтрШаблон("cmd /C ""%1"" > D:\1C_Log\1.txt", Команда),.
	//	// 0, Истина); СтрШаблон("%1 > D:\1C_Log\1.txt", Команда).
	//	Result = WshShell.Exec(Команда); 
	//Исключение
	//	ВызватьИсключение СтрШаблон("Произошла ошибка при выполнении метода ""%1""
	//	|Команда:
	//	|%2
	//	|Ошибка:
	//	|%3", ИмяКоманды, Команда, ОписаниеОшибки());
	//КонецПопытки;
	//
	//// Str = "";
	//// Пока Не Result.StdOut.AtEndOfStream Цикл.
	////	Str = Str + СтрШаблон(Result.StdOut.ReadLine());
	//// КонецЦикла;
	//
	//Пока Result.Status = 0 Цикл
	// 	//КипВнешнийКомпонент.Пауза(КипВнешнийКомпонент.ПолучитьИнструменты(), 100);
	//КонецЦикла;
	//
	//
	////Сообщить(Result.ExitCode);
	////
	//Если Result.ExitCode <> 0 Тогда
	//	ТекстОшибки = Result.StdErr.ReadAll();
	//	ВызватьИсключение СтрШаблон("При вызове метода ""%1"" произошла ошибка:
	//	|""%2""
	//	|
	//	|Выполняемая команда:
	//	|%3", ИмяКоманды, ТекстОшибки, Команда);
	//Иначе
	//	Текст = Result.StdOut.ReadAll();
	//	Возврат ОбщегоНазначенияСервер.ИзменитьКодировку(Текст, КодировкаТекста.ANSI, КодировкаТекста.UTF8);
	//КонецЕсли;
КонецФункции
                                        

//Процедура ЧтениеФайла(ПутьКФайлу)
//	#Если Клиент Тогда
//		НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗавершениеПомещениеФайла", ЭтотОбъект), "", ПутьКФайлу, Ложь, Новый УникальныйИдентификатор());
//	#Иначе
//		ЧтениеФайлаЗавершение(ПутьКФайлу, Неопределено);	
//	#КонецЕсли
//КонецПроцедуры

// &НаКлиенте
//Процедура ЗавершениеПомещениеФайла(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт 
//	Если Результат Тогда
//		ЧтениеФайлаЗавершение(Адрес, Неопределено);	
//	КонецЕсли;
//КонецПроцедуры

Функция ЧтениеФайла(ПутьКФайту) Экспорт 		
	Попытка
		Ф = Новый Файл(ПутьКФайту);
		Если Не Ф.Существует() Тогда
			Возврат "";	
		КонецЕсли;
		
		ТД = Новый ТекстовыйДокумент();
		ТД.Прочитать(ПутьКФайту, КодировкаТекста.UTF8);
		ОбщегоНазначенияКлиентСервер.УдалитьФайлыКлиентСервер(ПутьКФайту);
		
		Возврат ТД.ПолучитьТекст();
	Исключение
		ОбщегоНазначенияКлиентСервер.УдалитьФайлыКлиентСервер(ПутьКФайту);
		ВызватьИсключение;
	КонецПопытки;
КонецФункции


// Функция возвращает пароль доступа к SVN.
//
// Возвращаемое значение:
//   Строка   - пароль.
//
Функция ПарольДоступаК_SVN() Экспорт  
	Возврат "CitadelClose1";
КонецФункции
 
Функция КастомныеПоляJIRA(Псевдоним) Экспорт 
	ПоляJIRA = СтрРазделить("customfield_12500,customfield_18802,customfield_12913,customfield_17216,customfield_17202", ",");
	Синонимы = СтрРазделить("БЮДЖЕТ,ДОПНАСТРОЙКИ,RELEASENOTE,ВЕРСИЯГЗ,ВЕРСИЯФИН", ",");
	Индекс = Синонимы.Найти(ВРег(Псевдоним));
	Возврат ?(Индекс <> Неопределено, ПоляJIRA[Индекс], "");
КонецФункции


#КонецОбласти

 