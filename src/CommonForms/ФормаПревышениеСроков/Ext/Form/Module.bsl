&НаКлиенте
Перем БылиИзменения;


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьНаСервере();	
	
	Если ДеревоЗадачПревышениеСрока.ПолучитьЭлементы().Количество() > 0 Тогда
		Элементы.грПоДатам.Картинка = БиблиотекаКартинок.Важность;
	КонецЕсли;
	Если ЗадачиПревышениеПоБюджетамВВерсии.Количество() > 0 Тогда
		Элементы.грПоВерсиям.Картинка = БиблиотекаКартинок.Важность;
	КонецЕсли;
КонецПроцедуры                  

&НаСервере
Процедура ОбновитьНаСервере()
	Дерево = ОбщегоНазначенияСервер.ПолучитьКонфликтующиеДаты();
	ЗначениеВРеквизитФормы(Дерево, "ДеревоЗадачПревышениеСрока");
	
	ЗадачиПривышение = ОбщегоНазначенияСервер.ПолучитьПревышениеПоВерсиям();
	ЗначениеВРеквизитФормы(ЗадачиПривышение, "ЗадачиПревышениеПоБюджетамВВерсии");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	БылиИзменения = Ложь;
	Для Каждого СтрИсполнитель Из ДеревоЗадачПревышениеСрока.ПолучитьЭлементы() Цикл
		Для Каждого СтрДата Из СтрИсполнитель.ПолучитьЭлементы() Цикл
			СтрДата.Картинка = -1;
		КонецЦикла;
		СтрИсполнитель.Картинка = -1;
		Элементы.ДеревоЗадачПревышениеСрока.Развернуть(СтрИсполнитель.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗадачПревышениеСрокаПлановаяДатаЗавершенияПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ДеревоЗадачПревышениеСрока.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.ДатаИзменена = Истина;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗадачПревышениеСрокаПриИзменении(Элемент)
	БылиИзменения = Истина;
	ВизуализироватьИзменение();
КонецПроцедуры

&НаКлиенте
Процедура ВизуализироватьИзменение()
	Если БылиИзменения Тогда
		ЦветРамки	= Новый Цвет(255, 0, 0); 
	Иначе
		ЦветРамки	= Новый Цвет(160, 160, 160); 
	КонецЕсли;	
	Элементы.ДеревоЗадачПревышениеСрока.ЦветРамки = ЦветРамки;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	БылиИзменения = Ложь;
	НомераЗадачИзмененные = Новый Массив();
	
	Для Каждого СтрИсп Из ДеревоЗадачПревышениеСрока.ПолучитьЭлементы() Цикл
		Для Каждого СтрДата Из СтрИсп.ПолучитьЭлементы() Цикл
			Для Каждого СабСтр Из СтрДата.ПолучитьЭлементы() Цикл
				Если СабСтр.ДатаИзменена Тогда
					Если ЗначениеЗаполнено(СабСтр.Номер) И НомераЗадачИзмененные.Найти(СабСтр.Номер) = Неопределено Тогда
						НомераЗадачИзмененные.Добавить(СабСтр.Номер);
					КонецЕсли;
					СабСтр.ДатаИзменена = Ложь;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	СохранитьНаСервере(НомераЗадачИзмененные);
	ВизуализироватьИзменение();
	Оповестить("ИзмененияДатСохранено");
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	//Отказ = Истина;
	//ТекстПредупреждения = "ава";
	//ЗавершениеРаботы = Истина;
	//Если БылиИзменения Тогда
	//	ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), "Даты в списке были изменены, сохранить изменения перед закрытием?", РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Отмена, "Были изменения");
	//КонецЕсли;
КонецПроцедуры

//&НаКлиенте
//Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
//	ДополнительныеПараметры.Отказ = РезультатВопроса = КодВозвратаДиалога.Отмена;
//	Если ДополнительныеПараметры.Отказ Тогда
//		Возврат;	
//	КонецЕсли;
//	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
//		СохранитьНаСервере();	
//		Закрыть();
//	КонецЕсли;
//КонецПроцедуры

&НаСервере                                                           
Процедура СохранитьНаСервере(НомераЗадачИзмененные)
	Лог = "";
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Задачи.Код КАК Номер,
	|	Задачи.Родитель.Код КАК НомерРодительскойЗадачи,
	|	Задачи.Тип КАК Тип
	|ИЗ
	|	Справочник.Задачи КАК Задачи
	|ГДЕ
	|	Задачи.Код В(&НомераЗадач)
	|	И НЕ Задачи.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("НомераЗадач", НомераЗадачИзмененные);
	
	Дерево = РеквизитФормыВЗначение("ДеревоЗадачПревышениеСрока");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Строка = Дерево.Строки.Найти(Выборка.Номер, "Номер", Истина);
		Если Строка = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// Если сабтаск
		Если ЗначениеЗаполнено(Выборка.НомерРодительскойЗадачи) Тогда
			Номер = Выборка.НомерРодительскойЗадачи;
			ГруппаТипа = Выборка.Тип.Родитель;
			Если ГруппаТипа = Справочники.ТипыЗадач.Разработка Тогда
				Коэффициент = ОбщегоНазначенияКлиентСервер.КоэффициентРазработки();
			ИначеЕсли ГруппаТипа = Справочники.ТипыЗадач.Тестирование Тогда
				Коэффициент = ОбщегоНазначенияКлиентСервер.КоэффициентТестирования();
			КонецЕсли;
			
			Разница = Строка.ПлановаяДатаЗавершения - ТекущаяДата(); 
			ПлановаяДатаЗавершения = Строка.ПлановаяДатаЗавершения + Разница / Коэффициент;
		Иначе
			Номер = Выборка.Номер;
			ПлановаяДатаЗавершения = Строка.ПлановаяДатаЗавершения;
		КонецЕсли;
		
		ВзаимодействиеC_JIRA_КлиентСервер.ИзменитьДатуЗавершения(Номер, ПлановаяДатаЗавершения, Истина);
		
		//НомераЗадачИзмененные.Добавить(СабСтр.Номер);
		Лог = Лог + СтрШаблон("- Изменена дата в задаче и связанных задачах %1", Выборка.Номер) + Символы.ПС;
	КонецЦикла;
	
	РаботаСПочтовымиСообщениямиКлиентСервер.ОтправитьУведомлениеОСменеДаты(НомераЗадачИзмененные);
	Лог = Лог + СтрШаблон("- По задачам ""%1"" отправлено уведомление на email авторам", СтрСоединить(НомераЗадачИзмененные, ",")) + Символы.ПС;
	ОбновитьНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ДеревоЗадачПревышениеСрокаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.ДеревоЗадачПревышениеСрока.ДанныеСтроки(ВыбраннаяСтрока);
	Если ТекСтрока <> Неопределено Тогда
		ВзаимодействиеC_JIRA_КлиентСервер.ОткрытьЗадачуВБраузере(ТекСтрока.Номер);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПоменятьДатуВВыделеныйСтроках(Команда)
	Дата = ТекущаяДата();
	ПоказатьВводДаты(Новый ОписаниеОповещения("ПоменятьДатуВВыделеныйСтрокахЗавершение", ЭтотОбъект), Дата, "Введите дату завершения", ЧастиДаты.Дата);
КонецПроцедуры

&НаКлиенте
Процедура ПоменятьДатуВВыделеныйСтрокахЗавершение(Дата, ДополнительныеПараметры) Экспорт
	
	Если Дата <> Неопределено Тогда
		Для Каждого Стр Из Элементы.ДеревоЗадачПревышениеСрока.ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.ДеревоЗадачПревышениеСрока.ДанныеСтроки(Стр);
			Если ДанныеСтроки <> Неопределено Тогда
				Если ДанныеСтроки.ДатуЗавершенияУстановилАвтор Тогда
					Сообщить(СтрШаблон("Не удалось изменить дату в задаче ""%1"", т.к. дату завершения установил автор задачи", ДанныеСтроки.Номер));
					Продолжить;	
				КонецЕсли;
				
				ДанныеСтроки.ДатаИзменена = Истина;	
				ДанныеСтроки.ПлановаяДатаЗавершения = Дата;
				БылиИзменения = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ВизуализироватьИзменение();
КонецПроцедуры

&НаКлиенте
Процедура АвтоИсправления(Команда)
	АвтоИсправлениеНаСервере();
	
	БылиИзменения = Истина;
	ВизуализироватьИзменение();
КонецПроцедуры


&НаСервере
Процедура АвтоИсправлениеНаСервере()
	
	ДляПереносаНаДругуюДату = Новый ТаблицаЗначений();
	ДляПереносаНаДругуюДату.Колонки.Добавить("Задача");
	ДляПереносаНаДругуюДату.Колонки.Добавить("ОценкаВРабДнях");
	ДляПереносаНаДругуюДату.Колонки.Добавить("Исполнитель");
	
	Для Каждого СтрИсполнитель Из ДеревоЗадачПревышениеСрока.ПолучитьЭлементы() Цикл
		Превышение = СтрИсполнитель.ОценкаВРабДнях - СтрИсполнитель.РазностьКалендарныхДат;
		
		Для Каждого СтрДата Из СтрИсполнитель.ПолучитьЭлементы() Цикл
			ИтогПоЗадаче = 0;
			Для Каждого СабСтр Из СтрДата.ПолучитьЭлементы() Цикл
				Если Не СабСтр.ДатуЗавершенияУстановилАвтор И ИтогПоЗадаче < Превышение Тогда
					НовСтр = ДляПереносаНаДругуюДату.Добавить();
					НовСтр.ОценкаВРабДнях = СабСтр.ОценкаВРабДнях;
					НовСтр.Исполнитель = СабСтр.Исполнитель;
					НовСтр.Задача = СабСтр.Номер;
					
					ИтогПоЗадаче = ИтогПоЗадаче + СабСтр.ОценкаВРабДнях;
				КонецЕсли;
			КонецЦикла;			
		КонецЦикла;
	КонецЦикла;
	
	
	РаспределитьПоБудущимДатам(ДляПереносаНаДругуюДату);
КонецПроцедуры

&НаСервере
Процедура РаспределитьПоБудущимДатам(ДляПереносаНаДругуюДату)
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Задачи.Оценка) КАК Оценка,
	|	Задачи.Исполнитель КАК Исполнитель,
	|	Задачи.ПлановаяДатаЗавершения КАК ПлановаяДатаЗавершения
	|ПОМЕСТИТЬ Группировка
	|ИЗ
	|	Справочник.Задачи КАК Задачи
	|ГДЕ
	|	Задачи.Исполнитель В(&Исполнители)
	|	И Задачи.ПлановаяДатаЗавершения > &ТекДата
	|	И НЕ Задачи.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	Задачи.ПлановаяДатаЗавершения,
	|	Задачи.Исполнитель
	|
	|ИМЕЮЩИЕ
	|	СУММА(Задачи.Оценка) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПлановаяДатаЗавершения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&РабЧасов - Группировка.Оценка КАК СвободноеВремя,
	|	Группировка.Исполнитель КАК Исполнитель,
	|	Группировка.ПлановаяДатаЗавершения КАК ПлановаяДатаЗавершения
	|ПОМЕСТИТЬ ОБЪЕДИНЕНИЕ
	|ИЗ
	|	Группировка КАК Группировка
	|ГДЕ
	|	&РабЧасов - Группировка.Оценка > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикРаботы.РабочихЧасов,
	|	ГрафикРаботы.Пользователь,
	|	ГрафикРаботы.Дата
	|ИЗ
	|	РегистрСведений.ГрафикРаботы КАК ГрафикРаботы
	|ГДЕ
	|	ГрафикРаботы.Дата МЕЖДУ &ТекДата И &КонецГода
	|	И ГрафикРаботы.Пользователь В(&Исполнители)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ОБЪЕДИНЕНИЕ.СвободноеВремя) КАК СвободноеВремя,
	|	ОБЪЕДИНЕНИЕ.Исполнитель КАК Исполнитель,
	|	ОБЪЕДИНЕНИЕ.ПлановаяДатаЗавершения КАК ПлановаяДатаЗавершения
	|ИЗ
	|	ОБЪЕДИНЕНИЕ КАК ОБЪЕДИНЕНИЕ
	|
	|СГРУППИРОВАТЬ ПО
	|	ОБЪЕДИНЕНИЕ.ПлановаяДатаЗавершения,
	|	ОБЪЕДИНЕНИЕ.Исполнитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПлановаяДатаЗавершения";
	
	Запрос.УстановитьПараметр("Исполнители", ДляПереносаНаДругуюДату.ВыгрузитьКолонку("Исполнитель"));
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ТекущаяДатаСеанса()));
	
	РабЧасов = Константы.РабочийДень.Получить();
	РабЧасов = ?(РабЧасов = 0, 8, РабЧасов);
	Запрос.УстановитьПараметр("РабЧасов", РабЧасов + 1); // +1 - это с обедом
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из ДляПереносаНаДругуюДату Цикл
		СуммаРабочихЧасов = 0;
		СтрДерева = НайтиСтрокуДерева(Стр.Задача);
		
		Для Каждого Стр2 Из Выгрузка.НайтиСтроки(Новый Структура("Исполнитель", СтрДерева.Исполнитель)) Цикл
			Если СтрДерева.ПлановаяДатаЗавершения >= Стр2.ПлановаяДатаЗавершения Тогда 
				Продолжить;
			КонецЕсли;
			
			СуммаРабочихЧасов = СуммаРабочихЧасов + Стр2.СвободноеВремя;
			Если Стр.ОценкаВРабДнях <= СуммаРабочихЧасов Тогда
				Стр2.СвободноеВремя = Стр2.СвободноеВремя - Стр.ОценкаВРабДнях; 
				СтрДерева.ПлановаяДатаЗавершения	= Стр2.ПлановаяДатаЗавершения;	
				СтрДерева.ДатаИзменена = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не СтрДерева.ДатаИзменена Тогда
			Лог = Лог + СтрШаблон("- Не удалось перенести дату по задаче %1", СтрДерева.Номер) + Символы.ПС; 	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция НайтиСтрокуДерева(НомерЗадачи)
	Для Каждого СтрИсполнитель Из ДеревоЗадачПревышениеСрока.ПолучитьЭлементы() Цикл
		Для Каждого СтрДата Из СтрИсполнитель.ПолучитьЭлементы() Цикл
			Для Каждого СабСтр Из СтрДата.ПолучитьЭлементы() Цикл
				Если СабСтр.Номер = НомерЗадачи Тогда
					Возврат СабСтр;
				КонецЕсли;
			КонецЦикла;			
		КонецЦикла;
	КонецЦикла;
КонецФункции
