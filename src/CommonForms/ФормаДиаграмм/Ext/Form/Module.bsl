&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ТолькоСабтаски", ТолькоСабтаски);
	ВывестиДиаграмму(СтрРазделить(Параметры.Задачи, ","));
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Задачи.Номер КАК Номер,
	//	|	Задачи.Исполнитель КАК Исполнитель,
	//	|	ПРЕДСТАВЛЕНИЕ(Задачи.Исполнитель) КАК ИсполнительПредставление,
	//	|	Задачи.Оценка КАК Оценка,
	//	|	Задачи.ПлановаяДатаЗавершения КАК ПлановаяДатаЗавершения,
	//	|	Задачи.Заголовок КАК Заголовок,
	//	|	Задачи.Приоритет.Код КАК ПриоритетКод
	//	|ИЗ
	//	|	РегистрСведений.Задачи КАК Задачи
	//	|ГДЕ
	//	|	НЕ Задачи.Статус В (&СтатусыИсключения)
	//	|	И Задачи.НомерРодительскойЗадачи = """"
	//	|	И Задачи.Оценка > 0
	//	|	И Задачи.ПлановаяДатаЗавершения МЕЖДУ &ДатаНач И &ДатаКон
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	ПриоритетКод
	//	|ИТОГИ
	//	|	СУММА(Оценка)
	//	|ПО
	//	|	Номер";
	//
	//Запрос.УстановитьПараметр("СтатусыИсключения", СтрРазделить("Закрыт,Сделан", ","));
	//Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ТекущаяДатаСеанса()));
	//Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ТекущаяДатаСеанса()));
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Диаграмма.ОбластьПостроения.ШкалаВремени.Элементы[0].Единица = ТипЕдиницыШкалыВремени.День;
	//
	//Диаграмма.Обновление = Ложь;
	//Диаграмма.Очистить();
	//
	//ВыборкаНомер = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//
	//ТочкаПлановаяДатаЗавершения = Диаграмма.Точки.Добавить();
	//ТочкаПлановаяДатаЗавершения.Текст = Формат(ТекущаяДатаСеанса(), "ДФ=ММММ");
	//ОценкаПрерыдущихЗадач = 0;
	//Пока ВыборкаНомер.Следующий() Цикл
	//	
	//	ВыборкаДетальныеЗаписи = ВыборкаНомер.Выбрать();
	//	

	//	//
	//	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	//	ТочкаЗадача = ТочкаПлановаяДатаЗавершения.Точки.Добавить();
	//	//	ТочкаЗадача.Текст = Формат(ВыборкаНомер.ПлановаяДатаЗавершения, "ДФ=dd.MM.yyyy");
	//	//	
	//	РабочийДень = Константы.РабочийДень.Получить();
	//	РабочийДень = ?(РабочийДень = 0, 8, РабочийДень);
	//	ОценкаВРабДнях = ВыборкаНомер.Оценка / РабочийДень;
	//		Серия = Диаграмма.Серии.Добавить();
	//		Серия.Значение = ОценкаВРабДнях;
	//		Серия.Текст = СтрШаблон("%1 (%2 р.ч.)", ВыборкаНомер.Номер, ОценкаВРабДнях * РабочийДень);
	//		Значение = Диаграмма.ПолучитьЗначение(ТочкаПлановаяДатаЗавершения, Серия);
	//		Интервал = Значение.Добавить();
	//		
	//		Если ОценкаПрерыдущихЗадач = 0 Тогда
	//			Интервал.Начало = НачалоМесяца(ТекущаяДата());
	//		Иначе
	//		  Интервал.Начало = НачалоМесяца(ТекущаяДата()) + (ОценкаПрерыдущихЗадач * 24* 60*60);
	//		КонецЕсли;
	//		
	//		ОценкаПрерыдущихЗадач = ОценкаПрерыдущихЗадач + ОценкаВРабДнях;
	//		Интервал.Конец = Интервал.Начало + (ОценкаВРабДнях * 24 * 60*60)+1;
	//		Интервал.Текст = ВыборкаНомер.Номер;
	//		//Интервал.Расшифровка = ВыборкаНомер.Заголовок;
	//	//КонецЦикла;
	//КонецЦикла;
	//
	////Диаграмма.АвтоТранспонирование = Истина;
	//Диаграмма.Обновление = Истина;
КонецПроцедуры

&НаСервере
Процедура ВывестиДиаграмму(МассивЗадач)
	
	МВТ = Справочники.ШаблоныУведомлений.ПолучитьВремТаблГрафика(Ложь);
	
	
	Запрос = Новый Запрос;   
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	График.НомерЗадачи КАК НомерЗадачи,
		|	График.РабЧасовВРаботе КАК РабЧасовВРаботе
		|ПОМЕСТИТЬ ДанныеГрафика
		|ИЗ
		|	График КАК График
		|ГДЕ
		|	График.НомерЗадачи В(&Задачи)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Задачи.Номер КАК Номер,
		|	Задачи.Исполнитель КАК Исполнитель,
		|	ПРЕДСТАВЛЕНИЕ(Задачи.Исполнитель) КАК ИсполнительПредставление,
		|	Задачи.Оценка КАК Оценка,
		|	Задачи.ПлановаяДатаЗавершения КАК ПлановаяДатаЗавершения,
		|	Задачи.Заголовок КАК Заголовок,
		|	Задачи.Приоритет.Код КАК ПриоритетКод,
		|	ЕСТЬNULL(ИсторияИзмененияСтатусов.ДатаСобытия, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВзятияВРаботу,
		|	ЕСТЬNULL(ДанныеГрафика.РабЧасовВРаботе, 0) КАК ФактЧасовВРаботе
		|ИЗ
		|	РегистрСведений.Задачи КАК Задачи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИзмененияСтатусов КАК ИсторияИзмененияСтатусов
		|		ПО Задачи.Номер = ИсторияИзмененияСтатусов.НомерЗадачи
		|			И (ИсторияИзмененияСтатусов.ИсходныйСтатус = ""Новый"")
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеГрафика КАК ДанныеГрафика
		|		ПО Задачи.Номер = ДанныеГрафика.НомерЗадачи
		|ГДЕ
		|	Задачи.Номер В(&Задачи)
		|	И (&ТолькоСабтаски
		|				И Задачи.НомерРодительскойЗадачи <> """"
		|			ИЛИ НЕ &ТолькоСабтаски)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаВзятияВРаботу УБЫВ,
		|	ПриоритетКод
		|ИТОГИ ПО
		|	Исполнитель";
	
	
	Запрос.УстановитьПараметр("Задачи", МассивЗадач);        
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДатаСеанса());        
	Запрос.УстановитьПараметр("ТолькоСабтаски", ТолькоСабтаски);
	РезультатЗапроса = Запрос.Выполнить();
	
	Диаграмма.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Фиксированная; 
	Диаграмма.ОбластьПостроения.ШкалаВремени.Элементы[0].Единица = ТипЕдиницыШкалыВремени.День;
	НовЭлемент = Диаграмма.ОбластьПостроения.ШкалаВремени.Элементы.Добавить();
	НовЭлемент.Единица = ТипЕдиницыШкалыВремени.Месяц;
	
	Диаграмма.Обновление = Ложь;
	Диаграмма.Очистить();                                    
	
	РабочийДень = Константы.РабочийДень.Получить();
	РабочийДень = ?(РабочийДень = 0, 8, РабочийДень);
		
	ВыборкаИсполнитель = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//ТочкаПлановаяДатаЗавершения = Диаграмма.Точки.Добавить();
	//ТочкаПлановаяДатаЗавершения.Текст = Формат(ТекущаяДатаСеанса(), "ДФ=ММММ");
	
	Пока ВыборкаИсполнитель.Следующий() Цикл
		ТочкаИсполнитель = Диаграмма.Точки.Добавить();
		ТочкаИсполнитель.Текст = Строка(ВыборкаИсполнитель.Исполнитель);
		ВыборкаДетальныеЗаписи = ВыборкаИсполнитель.Выбрать();
		
		ТекШаг = 0;
		МаксДатаОкончания = Дата(1,1,1);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			//ТочкаЗадача = ТочкаПлановаяДатаЗавершения.Точки.Добавить();
			//ТочкаЗадача.Текст = Формат(ВыборкаНомер.ПлановаяДатаЗавершения, "ДФ=dd.MM.yyyy");
			//
			
			ОценкаВРабДнях = ВыборкаДетальныеЗаписи.Оценка / РабочийДень;
			Если ОценкаВРабДнях = 0 Тогда 
				Продолжить;	
			КонецЕсли;
			
			Если Диаграмма.Серии.Количество() <= ТекШаг Тогда
				Диаграмма.Серии.Добавить();
			КонецЕсли;
			
			Серия = Диаграмма.Серии[ТекШаг];
			
			//Серия = Диаграмма.Серии.Добавить();
			Серия.Значение = ОценкаВРабДнях;
			Серия.Текст = СтрШаблон("%1 (%2)", ВыборкаДетальныеЗаписи.Номер, ВыборкаДетальныеЗаписи.Заголовок);
			Значение = Диаграмма.ПолучитьЗначение(ТочкаИсполнитель, Серия);
			Интервал = Значение.Добавить();
			
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаВзятияВРаботу) Тогда
				Интервал.Начало = ВыборкаДетальныеЗаписи.ДатаВзятияВРаботу;	
			Иначе 
				// значит задача новая. В таком случаи ставим их после самой длинной в право диаграммы
				// Чисто теоретически может так получиться, что все новые задачи, в таком случаи МаксДатаОкончания будет не заполнен
				МаксДатаОкончания = ?(Не ЗначениеЗаполнено(МаксДатаОкончания), ТекущаяДатаСеанса(), МаксДатаОкончания);
				Интервал.Начало = МаксДатаОкончания+1
			КонецЕсли;
			
			ЗапланарованныйКонец = РасчитатьЗапланарованныйКонец(Интервал.Начало, ВыборкаИсполнитель.Исполнитель, ВыборкаДетальныеЗаписи.Оценка);
			ФактическийКонец = Интервал.Начало + (ВыборкаДетальныеЗаписи.ФактЧасовВРаботе * 60*60);
			
			Интервал.Конец = ЗапланарованныйКонец;
			Интервал.Текст = СтрШаблон("""%1"" оценено на %2 часов", ВыборкаДетальныеЗаписи.Номер, Формат(ВыборкаДетальныеЗаписи.Оценка, "ЧДЦ=2; ЧГ="));
			МаксДатаОкончания = Макс(МаксДатаОкончания, Макс(ФактическийКонец, ЗапланарованныйКонец));
			
			Если ВыборкаДетальныеЗаписи.ФактЧасовВРаботе > ВыборкаДетальныеЗаписи.Оценка Тогда
				ИнтервалФакт = Значение.Добавить();
				ИнтервалФакт.Начало = Интервал.Начало;			
				ИнтервалФакт.Конец = ФактическийКонец;
				ИнтервалФакт.Текст = СтрШаблон("""%1"" в работе %2 часов", ВыборкаДетальныеЗаписи.Номер, Формат(ВыборкаДетальныеЗаписи.ФактЧасовВРаботе, "ЧДЦ=2; ЧГ="));
			КонецЕсли;
			
			//Интервал.Расшифровка = ВыборкаНомер.Заголовок;
			
			ТекШаг = ТекШаг +1;
		КонецЦикла;
	КонецЦикла;
	
	//Диаграмма.АвтоТранспонирование = Истина;
	Диаграмма.Обновление = Истина;
КонецПроцедуры

&НаСервере
Функция РасчитатьЗапланарованныйКонец(ДатаНачала, Пользователь, ОценкаФакт)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГрафикРаботы.РабочихЧасов КАК РабочихЧасов,
		|	ГрафикРаботы.Дата КАК Дата,
		|	ДОБАВИТЬКДАТЕ(ГрафикРаботы.Дата, МИНУТА, &СмещениеНаНачалаДня * 60) КАК НачалоРабДня,
		|	ДОБАВИТЬКДАТЕ(ГрафикРаботы.Дата, МИНУТА, (&СмещениеНаНачалаДня + &РабЧасов) * 60) КАК КонецРабДня
		|ПОМЕСТИТЬ ВремТабл
		|ИЗ
		|	РегистрСведений.ГрафикРаботы КАК ГрафикРаботы
		|ГДЕ
		|	ГрафикРаботы.Дата >= НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ)
		|	И ГрафикРаботы.Пользователь = &Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВремТабл.РабочихЧасов КАК РабочихЧасов,
		|	ВремТабл.Дата КАК Дата,
		|	ВремТабл.НачалоРабДня КАК НачалоРабДня,
		|	ВремТабл.КонецРабДня КАК КонецРабДня,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ВремТабл.КонецРабДня, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ)
		|			ТОГДА РАЗНОСТЬДАТ(&ДатаНачала, ВремТабл.КонецРабДня, МИНУТА)
		|		ИНАЧЕ &РабЧасов * 60
		|	КОНЕЦ КАК РазницаМинут
		|ИЗ
		|	ВремТабл КАК ВремТабл
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("СмещениеНаНачалаДня", 9.5);
	РабЧасов = Константы.РабочийДень.Получить();
	РабЧасов = ?(РабЧасов = 0, 8, РабЧасов);
	Запрос.УстановитьПараметр("РабЧасов", РабЧасов + 1); // +1 - это с обедом

	
	ОценкаВМинутах = ОценкаФакт * 60;
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ЗапланарованныйКонец = ДатаНачала;
	Пока ВыборкаДетальныеЗаписи.Следующий() И ОценкаВМинутах > 0 Цикл
		ЗапланарованныйКонец = Макс(ДатаНачала, ВыборкаДетальныеЗаписи.НачалоРабДня) + (Мин(ВыборкаДетальныеЗаписи.РазницаМинут, ОценкаВМинутах) * 60);
		ОценкаВМинутах = ОценкаВМинутах - ВыборкаДетальныеЗаписи.РазницаМинут;
	КонецЦикла;
	
	Возврат ЗапланарованныйКонец;
КонецФункции


//&НаСервере
//Функция НайтиКонечнуюПозицию(Диаграмма, Точка)
//	Диаграмма.Серии
//	ДатаОкончания = Дата(1,1,1);
//	МаксимальныйИнтервал = Неопределено;
//	Для Каждого Интервал Из Значение Цикл
//		Если Интервал.Конец > ДатаОкончания Тогда
//			МаксимальныйИнтервал = Интервал;	
//			ДатаОкончания = Интервал.Конец;
//		КонецЕсли;
//	КонецЦикла;
//	
//	Возврат МаксимальныйИнтервал;
//КонецФункции


&НаКлиенте
Процедура Закрыть_(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаВыбор(Элемент, Значения, СтандартнаяОбработка, Дата)
	Для Каждого З Из Значения	Цикл
		Если ТипЗнч(З) = Тип("ИнтервалДиаграммыГанта") И ЗначениеЗаполнено(З.Текст) Тогда
			Нач = СтрНайти(З.Текст, """") +1;
			Кон = СтрНайти(З.Текст, """",, Нач);
			Номер = Сред(З.Текст, Нач, Кон - Нач);
			Если ЗначениеЗаполнено(Номер) Тогда
				ВзаимодействиеC_JIRA_КлиентСервер.ОткрытьЗадачуВБраузере(Номер);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ТолькоСабтаскиПриИзменении(Элемент)
	ВывестиДиаграмму(СтрРазделить(Параметры.Задачи, ","));
КонецПроцедуры

