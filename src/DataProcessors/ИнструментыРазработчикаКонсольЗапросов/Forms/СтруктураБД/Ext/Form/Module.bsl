/////////////// Защита модуля ///////////////
// @protect                                //
/////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
  ЗаполнитьСписокРодителей();
  ОбновитьСписокСущностейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МетаданныеСписокПриАктивизацииСтроки(Элемент)
  ТекущиеДанные = Элементы.МетаданныеСписок.ТекущиеДанные;
  Если ТекущиеДанные = Неопределено Тогда
    Возврат;
  КонецЕсли;
  
  //ПолучитьСтруктуруХраненияБазыДанных(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("РегистрСведений.РезультатыОбменаДанными"))
  
  Поля.Очистить();
  Для Каждого Стр Из ТекущиеДанные.Поля Цикл
    НовСтр = Поля.Добавить();  
    ЗаполнитьЗначенияСвойств(НовСтр, Стр);
  КонецЦикла;
  
  ЭлементыДерева = Индексы.ПолучитьЭлементы();
  ЭлементыДерева.Очистить();
  Для Каждого Стр Из ТекущиеДанные.Индексы Цикл
    НовСтр = ЭлементыДерева.Добавить();  
    ЗаполнитьЗначенияСвойств(НовСтр, Стр);
    
    НовЭлементы = НовСтр.ПолучитьЭлементы();
    Для Каждого СтрПоля Из Стр.Поля Цикл
      НовПодСтрока = НовЭлементы.Добавить();
      ЗаполнитьЗначенияСвойств(НовПодСтрока, СтрПоля);
    КонецЦикла;
    
    Элементы.Индексы.Развернуть(НовСтр.ПолучитьИдентификатор(), Истина);
  КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура МетаданныеРодителиПриИзменении(Элемент)
  ОбновитьСписокСущностейНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьДанные(Команда)
  Отбор = Новый Массив();
  Если ЗначениеЗаполнено(МетаданныеСущности) Тогда
    Отбор = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(МетаданныеСущности);  
  Иначе
    Отбор = Элементы.МетаданныеВыбор.СписокВыбора.ВыгрузитьЗначения();
  КонецЕсли;
  
  ОбновитьДанныеНаСервере(Отбор);
КонецПроцедуры            

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписокСущностейНаСервере()
  Если Не ЗначениеЗаполнено(МетаданныеРодители) Тогда
    Возврат;  
  КонецЕсли;
  
  МетаданныеСущности = "";
  Элементы.МетаданныеВыбор.СписокВыбора.Очистить();
  Для Каждого МетаОбъект Из Метаданные[МетаданныеРодители] Цикл
    Элементы.МетаданныеВыбор.СписокВыбора.Добавить(МетаОбъект.ПолноеИмя());
  КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРодителей()                
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("Справочники");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("РегистрыСведений");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("РегистрыНакопления");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("РегистрыБухгалтерии");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("РегистрыРасчета");
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("Последовательности");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("ПланыСчетов");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("ПланыОбмена");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("ПланыВидовХарактеристик");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("Перечисления");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("Константы");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("Задачи");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("ЖурналыДокументов");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("Документы");  
  Элементы.МетаданныеРодители.СписокВыбора.Добавить("БизнесПроцессы");  
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеНаСервере(МетаданныеОтбор);
  Табл = ПолучитьСтруктуруХраненияБазыДанных(МетаданныеОтбор, Истина); 
  ТаблФормы = РеквизитФормыВЗначение("МетаданныеСписок", Тип("ТаблицаЗначений")); 
  КолонкиСтрокой = Новый Массив();
  Для Каждого Колонка Из ТаблФормы.Колонки Цикл
    КолонкиСтрокой.Добавить(Колонка.Имя);  
  КонецЦикла;
  
  Табл.Сортировать("ИмяТаблицы Убыв");
  ЗначениеВРеквизитФормы(Табл.Скопировать(, СтрСоединить(КолонкиСтрокой, ",")), "МетаданныеСписок");
КонецПроцедуры

#КонецОбласти
