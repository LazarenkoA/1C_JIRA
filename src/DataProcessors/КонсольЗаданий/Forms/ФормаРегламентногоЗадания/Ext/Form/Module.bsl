
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Если УникальныйИдентификатор существует, то редактируем текущее задание, 
	//Если Нет, то создаем новое
	Если Параметры.Свойство("УникальныйИдентификатор") Тогда
		
		Элементы.ТипЗадания.Доступность=Ложь;
		Идентификатор = Новый УникальныйИдентификатор(Параметры.УникальныйИдентификатор);
		Задание=РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
		
		//заполним поля формы по данным рег. задания
		Наименование=Задание.Наименование;
		ИнтервалПовтораПриАварийномЗавершении=Задание.ИнтервалПовтораПриАварийномЗавершении;
		КоличествоПовторовПриАварийномЗавершении=Задание.КоличествоПовторовПриАварийномЗавершении;
		Использование=Задание.Использование;
		Предопределенное=Задание.Предопределенное;
		Расписание=Задание.Расписание;
		МетаданныеЗадание=Задание.Метаданные.Имя;
		ТипЗадания=Задание.Метаданные;
		УникальныйИдентификаторЗадания=Параметры.УникальныйИдентификатор;
		
	Иначе	
		
		Расписание = Новый РасписаниеРегламентногоЗадания;	
		Для Каждого Элемент ИЗ Метаданные.РегламентныеЗадания Цикл			
			Элементы.ТипЗадания.СписокВыбора.Добавить(Элемент.Имя,Элемент.Синоним);		
		КонецЦикла;		
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТипЗаданияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	МетаданныеЗадание=ВыбранноеЗначение;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаСервере
Процедура ЗаписатьРегламентноеЗадание()
	
	Если не ПустаяСтрока(УникальныйИдентификаторЗадания) Тогда		
		Идентификатор = Новый УникальныйИдентификатор(УникальныйИдентификаторЗадания);
		Задание=РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);		
	Иначе		
		Задание=РегламентныеЗадания.СоздатьРегламентноеЗадание(МетаданныеЗадание);		
	КонецЕсли;
	
	Задание.Наименование=Наименование;
	Задание.ИнтервалПовтораПриАварийномЗавершении=ИнтервалПовтораПриАварийномЗавершении;
	Задание.КоличествоПовторовПриАварийномЗавершении=КоличествоПовторовПриАварийномЗавершении;
	Задание.Использование=Использование;
	Задание.Расписание=Расписание;
	Задание.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Диалог.Показать(Новый ОписаниеОповещения("ОбновитьРасписание", ЭтотОбъект));
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////
//ПРОЧИЕ ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если Не ЗначениеЗаполнено(ТипЗадания) Или Не ЗначениеЗаполнено(Наименование) Тогда		
		Сообщить("Не заполнены обязательные реквизиты");
		Возврат;		
	КонецЕсли;
	
	ЗаписатьРегламентноеЗадание();	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРасписание(НовоеРасписание, Неопределен) Экспорт
	
	Если НовоеРасписание <> Неопределено Тогда		
		Расписание = НовоеРасписание;		
	КонецЕсли;
	
КонецПроцедуры


