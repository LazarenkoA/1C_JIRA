/////////////// Защита модуля ///////////////
// @protect                                //
/////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Процедура ЗагрузитьБазовыеНаборыИзменений(Объект) Экспорт 
  Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
    Возврат;  
  КонецЕсли;
  
  СписокЗадач = ПолучитьСписокЗадачВходящихВРевизию(Объект.Владелец);
  Объект.НаборыИзменений.Очистить();
  Для Каждого Задача Из СписокЗадач Цикл
    НовСтр = Объект.НаборыИзменений.Добавить();
    НовСтр.НаборИзменений = Задача;
    НовСтр.ВходитВБазовыйНабор = Истина;
  КонецЦикла;
КонецПроцедуры

Функция ПолучитьСписокЗадачВходящихВРевизию(Релиз)
  Запрос = Новый Запрос;
  Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
                 |	БФТ_НаборыИзмененийНаборИзменений.Ссылка КАК Ссылка
                 |ИЗ
                 |	РегистрСведений.БФТ_ИзмененияРепозитория КАК БФТ_ИзмененияРепозитория
                 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БФТ_НаборыИзменений.НаборИзменений КАК БФТ_НаборыИзмененийНаборИзменений
                 |		ПО БФТ_ИзмененияРепозитория.НомерРевизии = БФТ_НаборыИзмененийНаборИзменений.НомерРевизии
                 |			И БФТ_ИзмененияРепозитория.ИзменениеКонфигурации = БФТ_НаборыИзмененийНаборИзменений.ИзменениеКонфигурации
                 |ГДЕ
                 |	БФТ_ИзмененияРепозитория.ИзменениеКонфигурации
                 |	И БФТ_ИзмененияРепозитория.Период >= &ДатаНач
                 |	И БФТ_ИзмененияРепозитория.Период <= &ДатаКон";
	
  Запрос.УстановитьПараметр("ДатаНач", Релиз.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон", Релиз.ДатаРелиза);
  
  Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

#КонецОбласти

	
#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
  СтандартнаяОбработка = Ложь;
  
  Поля.Добавить("Код");
  Поля.Добавить("Наименование");
  Поля.Добавить("Дата");
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
  СтандартнаяОбработка = Ложь;
  Представление = СтрШаблон("%1 %2 от %3", Данные.Код, Данные.Наименование, Данные.Дата);
КонецПроцедуры

#КонецОбласти

#КонецЕсли