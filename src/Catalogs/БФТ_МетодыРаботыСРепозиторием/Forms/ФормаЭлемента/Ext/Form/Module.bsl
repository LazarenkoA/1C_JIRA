/////////////// Защита модуля ///////////////
// @protect                                //
/////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
  //СписокПараметров.Отбор.Элементы.Очистить();
  //ЭлементОтбора = СписокПараметров.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
  //
  //ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Метод");
  //ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
  //ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;	
  //ЭлементОтбора.Использование = Истина;

  ПрочитатьТаблицуПараметровНаСервере();
  ОбновитьПредпросмотрНаСервере(); 
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
  ЗаписатьТаблицуПараметровНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
  ОбновитьТаблицуПараметров();
  ОбновитьПредпросмотрНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИсполняемыйФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПутьКФайлу = ПолучитьИсполняемыйФайл();
	Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
		ИсполняемыйФайл = ПутьКФайлу;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметрыВыполнения

&НаКлиенте
Процедура ПараметрыВыполненияПриИзменении(Элемент)
  ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыполненияРежимВводаПараметраПриИзменении(Элемент)
  ТекущиеДанные = Элементы.ПараметрыВыполнения.ТекущиеДанные;
  Если ТекущиеДанные = Неопределено Тогда
    Возврат;  
  КонецЕсли;
  
  ТекущиеДанные.ЗначениеПараметра = "";
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыполненияЗначениеПараметраНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
  Перем ЗначениеПараметра;
  
  //СтандартнаяОбработка = Ложь;
  ТекущиеДанные = Элементы.ПараметрыВыполнения.ТекущиеДанные;
  Если ТекущиеДанные = Неопределено Тогда
    Возврат;  
  КонецЕсли;
  
  Элементы.ПараметрыВыполненияЗначениеПараметра.СписокВыбора.Очистить();
  Элементы.ПараметрыВыполненияЗначениеПараметра.РежимВыбораИзСписка = Ложь;
  Если ТекущиеДанные.РежимВводаПараметра = ПредопределенноеЗначение("Перечисление.БФТ_РежимВводаПараметра.ВыборКаталога") Тогда
    ЗначениеПараметра = ОткрытьДиалоговоеОкно(ТекущиеДанные.ЗначениеПараметра, "Выберите каталог", РежимДиалогаВыбораФайла.ВыборКаталога);
  ИначеЕсли ТекущиеДанные.РежимВводаПараметра = ПредопределенноеЗначение("Перечисление.БФТ_РежимВводаПараметра.ВыборФайла") Тогда
    ЗначениеПараметра = ОткрытьДиалоговоеОкно(ТекущиеДанные.ЗначениеПараметра, "Выберите файл", РежимДиалогаВыбораФайла.Открытие);
  ИначеЕсли ТекущиеДанные.РежимВводаПараметра = ПредопределенноеЗначение("Перечисление.БФТ_РежимВводаПараметра.ВыполнитьМетод") Тогда
    Методы = ПолучитьСписокМетодов();
    Элементы.ПараметрыВыполненияЗначениеПараметра.СписокВыбора.ЗагрузитьЗначения(Методы);
    Элементы.ПараметрыВыполненияЗначениеПараметра.РежимВыбораИзСписка = Истина;
  ИначеЕсли ТекущиеДанные.РежимВводаПараметра = ПредопределенноеЗначение("Перечисление.БФТ_РежимВводаПараметра.ВнешнийПараметр")  Тогда
    Методы = ПолучитьСписокВнешнихПараметров();
    Элементы.ПараметрыВыполненияЗначениеПараметра.СписокВыбора.ЗагрузитьЗначения(Методы);
    Элементы.ПараметрыВыполненияЗначениеПараметра.РежимВыбораИзСписка = Истина;
  КонецЕсли;
  
  Если ЗначениеЗаполнено(ЗначениеПараметра) Тогда
    ТекущиеДанные.ЗначениеПараметра = ЗначениеПараметра;
  КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыВыполненияПередУдалением(Элемент, Отказ)
  Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьПредпросмотр(Команда)
  Если ЭтаФорма.Модифицированность Тогда
    ПоказатьВопрос(Новый ОписаниеОповещения("ОбновитьПредпросмотрЗавершение", ЭтотОбъект), "Будет произведено сохранение элемента.
    |Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да, "Выберите действия");
  Иначе
    ОбновитьПредпросмотрНаСервере();
  КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНастройки(Команда)
	ОткрытьФорму("Справочник.БФТ_МетодыРаботыСРепозиторием.Форма.ФормаВыводаРезультатаТеста",, ЭтаФорма,,,, Новый ОписаниеОповещения("ПроверитьНастройкиЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОбновитьПредпросмотрНаСервере()
   Предпросмотр = Справочники.БФТ_МетодыРаботыСРепозиторием.СформироватьКомандуВыполнения(Объект.Ссылка,, Ложь);
КонецФункции

&НаКлиенте
Процедура ОбновитьТаблицуПараметров()
  Если Не ЗначениеЗаполнено(Объект.Шаблон) Тогда
    ПараметрыВыполнения.Очистить();
    Возврат;
  КонецЕсли;
  
  Индексы = ПолучитьИндексыПараметров();
  Для Каждого ИД Из Индексы Цикл 
    Отбор = Новый Структура("ПорядковыйНомерПараметра", ИД);
    Если ПараметрыВыполнения.НайтиСтроки(Отбор).Количество() = 0 Тогда
      НовСтр = ПараметрыВыполнения.Добавить();
      НовСтр.РежимВводаПараметра = ПредопределенноеЗначение("Перечисление.БФТ_РежимВводаПараметра.Произвольно"); // по умолчанию
      НовСтр.ПорядковыйНомерПараметра = ИД;
    КонецЕсли;
  КонецЦикла;
  
  // В шаблоне могло стать индексов меньше чем было до изменений.
  // Удаляем из таблице индексы которых нет в массиве.
  Для а = -(ПараметрыВыполнения.Количество()-1) По 0 Цикл
    Если Индексы.Найти(ПараметрыВыполнения[-а].ПорядковыйНомерПараметра) = Неопределено Тогда
      ПараметрыВыполнения.Удалить(-а);
    КонецЕсли;
  КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТаблицуПараметровНаСервере()
  ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор;;
	
	Если Объект.СерверныеНастройки Тогда
		ТекущийПользователь = ОбщегоНазначенияКлиентСервер.ПустоеЗначениеТипа(Тип("УникальныйИдентификатор"));
	КонецЕсли;
	
  // предварительно чистим все параметры по тек. методу и пользователю
  Набор = РегистрыСведений.БФТ_ПользовательскиеНастройкиПодключенияКРепозиторию.СоздатьНаборЗаписей();  
  Набор.Отбор.Пользователь.Установить(ТекущийПользователь);
  Набор.Отбор.Объект.Установить(Объект.Ссылка);
  Набор.Прочитать();
  Набор.Очистить();
  Набор.Записать();
  
  Для Каждого Стр Из ПараметрыВыполнения Цикл
    Запись = РегистрыСведений.БФТ_ПользовательскиеНастройкиПодключенияКРепозиторию.СоздатьМенеджерЗаписи();  
    Запись.Пользователь = ТекущийПользователь;
    Запись.Объект = Объект.Ссылка; 
    Запись.ПорядковыйНомерПараметра = Стр.ПорядковыйНомерПараметра;
    Запись.РежимВводаПараметра = Стр.РежимВводаПараметра;
    Запись.ЗначениеПараметра = Стр.ЗначениеПараметра;
		
		Если Объект.СерверныеНастройки Тогда
			Запись.ИсполняемыйФайл = ИсполняемыйФайл;
		КонецЕсли;
		
    Запись.Записать();
  КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьТаблицуПараметровНаСервере()
  Выборка = БФТ_ОбщиеМетодыАРМаСборокНаСервере.ПолучитьНастройки(Объект.Ссылка);
  Пока Выборка.Следующий() Цикл
    НовСтр = ПараметрыВыполнения.Добавить();
    ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
		Если ЗначениеЗаполнено(Выборка.ИсполняемыйФайл) И Не ЗначениеЗаполнено(ИсполняемыйФайл) Тогда
			ИсполняемыйФайл = Выборка.ИсполняемыйФайл;	
		КонецЕсли;
  КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ИсполняемыйФайл) Тогда
		Выборка = БФТ_ОбщиеМетодыАРМаСборокНаСервере.ПолучитьНастройки(Объект.Владелец);
		Если Выборка.Следующий() Тогда
			ИсполняемыйФайл = Выборка.ИсполняемыйФайл;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Функция ПолучитьИндексыПараметров(НачальнаяПозиция = 1)
  Результат = Новый Массив();
  
  Если НачальнаяПозиция > СтрДлина(Объект.Шаблон) Тогда
    Возврат Результат;
  КонецЕсли;
    
  ОткрывающаяСкобка = СтрНайти(Объект.Шаблон, "{",, НачальнаяПозиция) +1;
  ЗакрывающаяСкобка = СтрНайти(Объект.Шаблон, "}",, НачальнаяПозиция);
  Если ОткрывающаяСкобка = 1 И ЗакрывающаяСкобка = 0 Тогда
    Возврат Результат;
  ИначеЕсли ОткрывающаяСкобка > 1 И ОткрывающаяСкобка > ЗакрывающаяСкобка Тогда
    ВызватьИсключение "Нарушена последовательность открывающихся и закрывающихся скобок";  
  КонецЕсли;
  
  ПараметрСтрокой = Сред(Объект.Шаблон, ОткрывающаяСкобка, ЗакрывающаяСкобка - ОткрывающаяСкобка);
  Параметр = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПараметрСтрокой); 
  Если Параметр = Неопределено ИЛИ Параметр = 0 Тогда
    ВызватьИсключение СтрШаблон("Ошибочное значение параметра ""%1"", параметр может быть цифрой больше 0", ПараметрСтрокой);
  КонецЕсли;
  
  Результат.Добавить(Параметр);
  
  Возврат _СлитьМассивы(Результат, ПолучитьИндексыПараметров(ЗакрывающаяСкобка +1));
КонецФункции


&НаСервере
Функция _СлитьМассивы(М1, М2)
  Возврат СлитьМассивы(М1, М2);
КонецФункции

&НаКлиенте
Функция ОткрытьДиалоговоеОкно(ТекПуть, Заголовок, РежимДиалога)
  #Если ВебКлиент Тогда 
    Каталог = КаталогДокументов();
  #Иначе
    Каталог = КаталогПрограммы();
  #КонецЕсли 
  
  Если ЗначениеЗаполнено(ТекПуть) Тогда
    Файл = Новый Файл(ТекПуть); 
    Если Файл.Существует() Тогда
      Каталог = Файл.Путь;
    КонецЕсли;
  КонецЕсли;
  
  Диалог            = Новый ДиалогВыбораФайла(РежимДиалога);
  Диалог.Заголовок  = Заголовок;
  //Диалог.Фильтр     = "*.exe|*.exe";   
  Диалог.МножественныйВыбор = Ложь;
  Диалог.Каталог = Каталог; 
  
  Если Диалог.Выбрать() Тогда
    Возврат ?(РежимДиалога = РежимДиалогаВыбораФайла.ВыборКаталога, Диалог.Каталог, Диалог.ПолноеИмяФайла);
  КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьСписокМетодов()
  Возврат Справочники.БФТ_МетодыРаботыСРепозиторием.ПубличныеМетоды(); 
КонецФункции

&НаСервере
Функция ПолучитьСписокВнешнихПараметров()
  Возврат Справочники.БФТ_МетодыРаботыСРепозиторием.ВнешниеПараметры(); 
КонецФункции

&НаКлиенте
Процедура ОбновитьПредпросмотрЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
  Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
    ЭтаФорма.Записать();
    ОбновитьПредпросмотрНаСервере();      
  КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИсполняемыйФайл()
  #Если ВебКлиент Тогда 
    Каталог = КаталогДокументов();
  #Иначе
    Каталог = КаталогПрограммы();
  #КонецЕсли 
  
  Если ЗначениеЗаполнено(ИсполняемыйФайл) Тогда
    Файл = Новый Файл(ИсполняемыйФайл);  
    Каталог = Файл.Путь;
  КонецЕсли;
  
  Диалог            = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
  Диалог.Заголовок  = "Выберите исполняемый файл";
  Диалог.Фильтр     = "*.exe|*.exe";   
  Диалог.МножественныйВыбор = Ложь;
  Диалог.Каталог = Каталог; 
  
  Если Диалог.Выбрать() Тогда
    Возврат Диалог.ПолноеИмяФайла;
  КонецЕсли;  
КонецФункции

&НаКлиенте
Процедура ПроверитьНастройкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
  Рез = Результат; // Не нужно ничего делать.	
КонецПроцедуры

#КонецОбласти
