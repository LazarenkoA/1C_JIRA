/////////////// Защита модуля ///////////////
// @protect                                //
/////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
  
#Область ПрограммныйИнтерфейс

// Функция получает список внешних параметров.
//
// Возвращаемое значение: 
//  Массив(Строк) - массив имен внешних параметров.
//
Функция ВнешниеПараметры() Экспорт
  Методы = Новый Массив();
  Методы.Добавить("НомерСборки");
  Методы.Добавить("НомерБазовойРевизии");
  Методы.Добавить("НомераРевизийДляСлияния");
  Методы.Добавить("ЛокальныйПутьКСборке");
  Методы.Добавить("ЛокальныйКаталогДляСинхронизации");
  Методы.Добавить("Пароль");
  Методы.Добавить("Комментарий");
  Методы.Добавить("НачальнаяДата");
  Методы.Добавить("КонечнаяДата");
  
  Возврат Методы;
КонецФункции

// Функция получает текст запроса для отбора при выгрузке.
//
// Возвращаемое значение: 
//  Строка - текст запроса для отбора при выгрузке.
//
Функция ЗапросОтбораДляВыгрузки() Экспорт 
	Возврат "ВЫБРАТЬ
	        |	Спр.Ссылка
	        |ИЗ
	        |	Справочник.БФТ_МетодыРаботыСРепозиторием КАК Спр
	        |ГДЕ
	        |	НЕ Спр.ПометкаУдаления";
	
КонецФункции

// Функция получает список внешних параметров.
//
// Возвращаемое значение: 
//  Массив(Строк) - массив имен процедур которые будут доступны из UI.
//
Функция ПубличныеМетоды() Экспорт
  // Объявление процедур которые будут доступны из UI.
  Методы = Новый Массив();
  Методы.Добавить("ПолучитьНомерПоследнейРевизии");
  
  Возврат Методы;
КонецФункции

// Функция получает текст для выполнения команды.
//
// Параметры:
//  МетодСсылка - СправочникСсылка.БФТ_МетодыРаботыСРепозиторием - ссылка на элемент справочника;
//  ВнешниеПараметры - Структура - структура с параметрами;
//  ВызыватьИсключение - Булево - вызывать исключение при ошибке.
//
// Возвращаемое значение: 
//  Строка - текст команды для выполнения.
//
Функция СформироватьКомандуВыполнения(МетодСсылка, ВнешниеПараметры = Неопределено, ВызыватьИсключение = Истина) Экспорт 
	Перем ИсполняемыйФайл;
	
	Если ВнешниеПараметры = Неопределено Тогда
		ВнешниеПараметры = Новый Структура();
		ВнешниеПараметры.Вставить("Пароль", БФТ_ОбщиеМетодыАРМаСборокНаКлиентеНаСервере.ПарольДоступаК_SVN());
	ИначеЕсли Не ВнешниеПараметры.Свойство("Пароль") Тогда
		ВнешниеПараметры.Вставить("Пароль", БФТ_ОбщиеМетодыАРМаСборокНаКлиентеНаСервере.ПарольДоступаК_SVN());	
	КонецЕсли;
	
  Шаблон = МетодСсылка.Шаблон;
  
  ПараметрыМетода = БФТ_ОбщиеМетодыАРМаСборокНаСервере.ПолучитьНастройки(МетодСсылка);
  НастройкиВладельца = БФТ_ОбщиеМетодыАРМаСборокНаСервере.ПолучитьНастройки(МетодСсылка.Владелец);
  Если НастройкиВладельца.Следующий() Тогда
    ИсполняемыйФайл = НастройкиВладельца.ИсполняемыйФайл;  
  КонецЕсли;
  
	Пока ПараметрыМетода.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ИсполняемыйФайл) Тогда
			ИсполняемыйФайл = ПараметрыМетода.ИсполняемыйФайл;
		КонецЕсли;
		
    ЗначениеПараметра = ПараметрыМетода.ЗначениеПараметра;
    Если ПараметрыМетода.РежимВводаПараметра = Перечисления.БФТ_РежимВводаПараметра.ВыполнитьМетод 
      И ЗначениеЗаполнено(ПараметрыМетода.ЗначениеПараметра) Тогда
      ЗначениеПараметра = Вычислить(СтрШаблон("%1()", ПараметрыМетода.ЗначениеПараметра));
    ИначеЕсли ПараметрыМетода.РежимВводаПараметра = Перечисления.БФТ_РежимВводаПараметра.ВнешнийПараметр Тогда
      Если ВнешниеПараметры = Неопределено ИЛИ Не ВнешниеПараметры.Свойство(ПараметрыМетода.ЗначениеПараметра, ЗначениеПараметра) Тогда
        ЗначениеПараметра = "";
      КонецЕсли;
    КонецЕсли;                         
    
    Шаблон = СтрЗаменить(Шаблон, СтрШаблон("{%1}", ПараметрыМетода.ПорядковыйНомерПараметра), ЗначениеПараметра);
	КонецЦикла;
	Если ВызыватьИсключение И ПараметрыМетода.Количество() = 0 И СтрЧислоВхождений(Шаблон, "{") > 0 Тогда
		ВызватьИсключение СтрШаблон("Не настроен метод ""%1""", МетодСсылка);
	КонецЕсли;
  
  Возврат СтрШаблон("""%1"" %2", ИсполняемыйФайл, Шаблон);
КонецФункции

// Функция получает номер последней ревизии.
//
// Возвращаемое значение: 
//  Строка - номер последней ревизии.
//
&НаСервере
Функция ПолучитьНомерПоследнейРевизии() Экспорт  
  Запрос = Новый Запрос;
  Запрос.Текст = 
    "ВЫБРАТЬ ПЕРВЫЕ 1
    | БФТ_ИзмененияРепозиторияСрезПоследних.НомерРевизии КАК НомерРевизии
    |ИЗ
    | РегистрСведений.БФТ_ИзмененияРепозитория.СрезПоследних КАК БФТ_ИзмененияРепозиторияСрезПоследних
    |
    |УПОРЯДОЧИТЬ ПО
    | НомерРевизии УБЫВ";
  
  Выборка = Запрос.Выполнить().Выбрать();
  Возврат Формат(?(Выборка.Следующий(), Выборка.НомерРевизии, 0), "ЧГ=");
КонецФункции


// Функция - Возвращает реквизиты справочника, которые образуют естественный ключ для элементов справочника.
//
// Возвращаемое значение: 
//  Массив(Строка) - массив имен реквизитов, образующих естественный ключ.
//
&НаСервере
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив();
	Результат.Добавить("Шаблон");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли